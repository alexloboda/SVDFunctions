// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// select_controls_cpp
List select_controls_cpp(NumericMatrix& gmatrix, NumericVector& residuals, NumericMatrix& cc, NumericVector& chi2fn, NumericVector min_lambda, NumericVector lb_lambda, NumericVector max_lambda, NumericVector ub_lambda, IntegerVector min, IntegerVector bin_size);
RcppExport SEXP _SVDFunctions_select_controls_cpp(SEXP gmatrixSEXP, SEXP residualsSEXP, SEXP ccSEXP, SEXP chi2fnSEXP, SEXP min_lambdaSEXP, SEXP lb_lambdaSEXP, SEXP max_lambdaSEXP, SEXP ub_lambdaSEXP, SEXP minSEXP, SEXP bin_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type gmatrix(gmatrixSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type residuals(residualsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type cc(ccSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type chi2fn(chi2fnSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type min_lambda(min_lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lb_lambda(lb_lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type max_lambda(max_lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ub_lambda(ub_lambdaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type min(minSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type bin_size(bin_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(select_controls_cpp(gmatrix, residuals, cc, chi2fn, min_lambda, lb_lambda, max_lambda, ub_lambda, min, bin_size));
    return rcpp_result_gen;
END_RCPP
}
// parse_vcf
List parse_vcf(const CharacterVector& filename, const CharacterVector& samples, const CharacterVector& bad_positions, const CharacterVector& variants, const IntegerVector& DP, const IntegerVector& GQ, const LogicalVector& gmatrix, const CharacterVector& regions, const CharacterVector& binary_prefix);
RcppExport SEXP _SVDFunctions_parse_vcf(SEXP filenameSEXP, SEXP samplesSEXP, SEXP bad_positionsSEXP, SEXP variantsSEXP, SEXP DPSEXP, SEXP GQSEXP, SEXP gmatrixSEXP, SEXP regionsSEXP, SEXP binary_prefixSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const CharacterVector& >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< const CharacterVector& >::type samples(samplesSEXP);
    Rcpp::traits::input_parameter< const CharacterVector& >::type bad_positions(bad_positionsSEXP);
    Rcpp::traits::input_parameter< const CharacterVector& >::type variants(variantsSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type DP(DPSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type GQ(GQSEXP);
    Rcpp::traits::input_parameter< const LogicalVector& >::type gmatrix(gmatrixSEXP);
    Rcpp::traits::input_parameter< const CharacterVector& >::type regions(regionsSEXP);
    Rcpp::traits::input_parameter< const CharacterVector& >::type binary_prefix(binary_prefixSEXP);
    rcpp_result_gen = Rcpp::wrap(parse_vcf(filename, samples, bad_positions, variants, DP, GQ, gmatrix, regions, binary_prefix));
    return rcpp_result_gen;
END_RCPP
}
// parse_binary_file
List parse_binary_file(const CharacterVector& variants, const CharacterVector& samples, const CharacterVector& binary_file, const CharacterVector& metafile, IntegerVector& requiredDP, IntegerVector requiredGQ);
RcppExport SEXP _SVDFunctions_parse_binary_file(SEXP variantsSEXP, SEXP samplesSEXP, SEXP binary_fileSEXP, SEXP metafileSEXP, SEXP requiredDPSEXP, SEXP requiredGQSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const CharacterVector& >::type variants(variantsSEXP);
    Rcpp::traits::input_parameter< const CharacterVector& >::type samples(samplesSEXP);
    Rcpp::traits::input_parameter< const CharacterVector& >::type binary_file(binary_fileSEXP);
    Rcpp::traits::input_parameter< const CharacterVector& >::type metafile(metafileSEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type requiredDP(requiredDPSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type requiredGQ(requiredGQSEXP);
    rcpp_result_gen = Rcpp::wrap(parse_binary_file(variants, samples, binary_file, metafile, requiredDP, requiredGQ));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SVDFunctions_select_controls_cpp", (DL_FUNC) &_SVDFunctions_select_controls_cpp, 10},
    {"_SVDFunctions_parse_vcf", (DL_FUNC) &_SVDFunctions_parse_vcf, 9},
    {"_SVDFunctions_parse_binary_file", (DL_FUNC) &_SVDFunctions_parse_binary_file, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_SVDFunctions(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
